version: '3.8'

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"      # Puerto de RabbitMQ para AMQP
      - "15672:15672"    # Panel de administraci√≥n web de RabbitMQ
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  movies:
    build:
      context: ./movies
      dockerfile: Dockerfile
    container_name: movies_service
    ports:
      - "3000:3000"
    environment:
      MONGO_URI: mongodb://mongodb:27017
      DB_NAME: peliculas
      COLLECTION_NAME: movies
      JSON_FILE_PATH: /movies.json
      RABBITMQ_URI: amqp://rabbitmq:5672  # URI para conectar con RabbitMQ
    depends_on:
      - mongodb
      - rabbitmq
    volumes:
      - ./movies/movies.json:/movies.json

  random-movies:
    build:
      context: ./random-movies
      dockerfile: Dockerfile
    container_name: random_movies_service
    ports:
      - "3001:3001"
    environment:
      RABBITMQ_URI: amqp://rabbitmq:5672  # URI para conectar con RabbitMQ
    depends_on:
      - movies
      - rabbitmq
  
  historial:
    build:
      context: ./historial
      dockerfile: Dockerfile
    container_name: historial_service
    ports:
      - "3003:3003"
    environment:
      RABBITMQ_URI: amqp://rabbitmq 
      RABBITMQ_PORT: 5672
    restart: on-failure # https://stackoverflow.com/questions/53031439/connecting-to-rabbitmq-container-with-docker-compose
    depends_on:
      - rabbitmq
      - movies

  recomendador:
    build:
      context: ./recomendador
      dockerfile: Dockerfile
    container_name: recomendador_service
    ports:
      - "3002:3002"
    environment:
      RABBITMQ_URI: amqp://rabbitmq:5672  # URI para conectar con RabbitMQ
    restart: on-failure
    depends_on:
      - movies
      - rabbitmq

  front-end:
    build:
      context: ./front-end
      dockerfile: Dockerfile
    container_name: front_end_service
    ports:
      - "8000:8000"
    environment:
      RANDOM_MOVIES_URL: 'http://random_movies_service:3001/api/random/movies'
      HISTORIAL_URL: 'http://historial_service:3003/api/historial'
      RECOMMENDATION_URL: 'http://recomendador_service:3002/api/recommend'
    depends_on:
      - movies
      - recomendador
      - random-movies

volumes:
  mongo_data:
    driver: local
